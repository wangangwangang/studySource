~json概念（JavaScript Object Notation  JS对象图谱）
	·JS对象图谱是一种轻量级的数据交互格式，易于人阅读和编写，同时也易于机器解析和生成
	
~实例：
	·{"name":"Jack","sex":"male"}
	·{"name":"jack","age":11,"address":{"county":"china","zip-code":"10000"}}
	·{"a":1,"b":[1,2,3]}
	
~json-c类型
	typedef enum json_type{
		json_type_null,
		json_type_boolean,
		json_type_double,
		json_type_int,
		json_type_object,
		json_type_array,
		json_type_string,
		}json_type;
		
~json-c  API 
	1.将符合json格式的字符串构造为一个json对象
	struct json_object *json_tokener_parse(const char *s);
	
	2.将json对象转换为符合json格式的字符串
	const char* json_object_to_json_string(struct json_object *obj);
	
	3.创建json对象
	struct json_object *json_object_new_object();
	
	4.往json对象中添加键值对
	void json_object_object_add(struct json_object *obj,const char *key,struct json_object *value);
	
	5.将c字符串转换为json字符串格式的对象
	struct json_object *json_object_new_string(const char *s);
	
	6.将整形转换为json格式的对象
	struct json_object *json_object_new_int(int32_t i);
	
	7.根据键名获取对应的json对象
	json_bool json_object_object_get_ex(struct json_object *obj,const char *key,struct json_object **value)
	
	8.获取json对象的整形数值
	int_32 json_object_get_int(struct json_object *obj);
	
	9.获取json对象的字符串值
	const char *json_object_get_string(struct json_object *obj);

	