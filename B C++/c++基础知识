~什么是STL？

~new/delete的使用：
	1）语法：new  数据类型
	2）用途一：int* p=new int;        delete p;        
	   用途二：int* p=new int[10]     delete p[];
	   
	3）注意：
		（1）new不同于malloc(),不是函数
		（2）int* p=new int(10)是创建p的同时，对p指向的值初始化
		（3）在delete完对象后，记得p=NULL，防止出现野指针
		
~&：引用的用法
	1）作用：给变量起别名
	2）本质：常量指针
	3）语法：int &a1=a;
	4）注意：
		（1）引用一定要初始化
		（2）初始化之后就不可以定义为其余变量的别名
		（3）形参为引用时，也可以更改实参的值，节省内存开销
		
~函数形参默认值相关：
	1）示例：int fun(int a,int b=10,int c=20)
	           {
				...
			   }
	2）注意：
		（1）如果我们在调用函数时，自己传参就用自己的数据，如果没有就用默认值
		（2）如果某个位置已经有了默认参数，那么从这个位置往后，从左到右都必须有默认值
		（3）函数声明和函数定义只能默认一次
		
~C++面向对象三大特性：
	封装	继承 	多态
	
~封装的意义：
	1）将成员变量/成员属性和成员函数/成员方法定义在一起
	2）权限控制：
		public：	公共权限，类内可访问，类外可访问
		private:	私有权限，类内可访问，类外不可访问
		protected:	保护权限，类内可访问，类外不可访问

~C++中struct和class区别：唯一区别就是默认权限不同
	·struct：默认public
	·class:	 默认private

~c语言中struct与c++中struct有何区别：
	1）在实例化对象时，c语言前需要加struct关键字
	2）c语言没有面向对象的三大特性：
		（1）无成员函数，无权限管理
		（2）无继承
		（3）五多态
	
~成员属性设置私有的目的：
	1）可以自己控制成员变量的读写权限
	2）写数据时可以检测数据的有效性

~构造函数：
	1）作用：创建对象时初始化对象
	2）特点：
		（1）无返回值，也不写void
		（2）函数名称与类名相同
		（3）有参数，可以发生重载
		（4）在创建对象时由编译器自动调用，且只调用一次
		
~析构函数：
	1）作用：销毁对象前对成员属性的内存进行清理
	2）特点：
		（1）无返回值，也不写void
		（2）函数，在名称前加~
		（3）无参数，不可以发生重载
		（4）对象销毁前由系统自动调用，且只调用一次

~构造函数分类：
	1）无参构造函数
	2）有参构造函数
	3）拷贝构造函数：参数书写格式：类名 &形参对象名，一般用const修饰
		
~构造函数的调用方法：
	1）默认构造函数的调用（无参）：	
		Person p;
	2）匿名对象（有参）：	
		Person(10)
		说明：
			（1）当前行执行完，系统立刻回收掉匿名对象
			（2）不要使用拷贝构造函数初始化匿名对象，因为Person(p1) === Person p1,会被编译器认为是重复定义
	3）括号法（有参/拷贝）：
		Person p1(10);
		Person p2(p1);
	4）显示法（有参/拷贝）：
		Person p1=Person(10);
		Person p1=Person(p1);
	5）隐式转换法（有参/拷贝）：
		Person p1=10;
		Person p2=p1;
		
~拷贝构造函数的调用时机：
	1）使用已经创建好的对象来初始化一个新的对象
	2）值传递的方式给函数传参
	3）值方式返回局部对象
	
~构造函数的调用规则：
	1）默认有无参构造函数和拷贝构造函数
	2）有参构造函数若要使用只能自定义
	3）若定义了有参或者拷贝构造函数，无参构造函数一定要重新定义
	
~







