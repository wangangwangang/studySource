												杂项
-----------------------------------------------------------------------------------------------------------------                  
~看看有没有类似于CC的软件实现网络资源同步（GIT）
						
~研究PATH，添加在PATH下的路径有什么作用
~研究/etc目录~寻找云同步网盘，研究git用法
~共和国之辉是干什么的软件
~什么是局域网，连接同一个无线网不是在同一个局域网吗
~将vimrc整理一下
~将profile文件整理一下
~研究如何设置Linux提示栏信息，显示的文件名颜色
~研究其余扣税项，具体了解五险的用处
~学习各种debug方法
~研究xmind软件：画思维导图用的
~研究source insight软件
~整理所有进程间通信的编程模型
~着重理解内存空间的分配(答案在网站书签)
~open()/close()/read()/write() 参数，返回值
~mkfifo在read.c/write.c中都存在，一个程序创建成功后，另外一个程序运行到这步的时候不报错吗？
~研究一下线程锁
~添加linux内核源码
~好好研究线程回收
~malloc()申请堆内存的意义
~select和epoll本质上是单线程还是单进程
~详细分析epoll_wait（）和select（）三种timeout不同设置时返回值的不同情况
~学习IDE的使用
~分析gitee的用法
~研究git的分支使用
~研究后台运行机制
												shell——linux
-----------------------------------------------------------------------------------------------------------------
~bash命令
~学习如何完整的创建一个带有linux操作系统的虚拟机
~xme5不同电脑间远程连接
~解决服务器定时执行脚本问题
~设置开机启动脚本
~设置自定义环境变量
~学习vim使用，设置符合自己的vimrc文件
~个人自定义.profile文件
~什么是机械硬盘，固态硬盘，移动硬盘，区别是什么
~硬盘的接口有哪些种类
~什么是文件系统，什么是挂载点
~工作站原理（IP，物理服务器，用户管理，磁盘空间，文件系统，目录树，挂载点）
		1）linux系统安装一遍加深理解 

											     makefile
-----------------------------------------------------------------------------------------------------------------
~动态库的使用设计
~通配符的使用
~源文件路径问题，生成目标文件路径问题
~解析apollo代码makefile文件



												C语言
-----------------------------------------------------------------------------------------------------------------
~正确理解库的使用机制
~怎么知道函数属于哪个库
~预定义变量有哪几个
~电脑有哪几块存储区域
~理解：内存，硬盘储存，缓存，共享内存，缓冲区
~进程间通信方式
~改变链接文件会改变原文件吗
~软连接与硬链接的区别
~总结2进制，8进制，10进制，16进制的内存占用问题详解
~整理break与continue用法
~详细分析结构体与共用体之间的区别，分析两者的内存占用问题，以及具体使用问题
~区分typedef int INT; 与 #define INT int  的区别
~研究文件写入读出时与缓冲区的关系，fclose的作用
	标准输入输出函数使用缓冲区，在向文件写数据时，是先将数据输入缓冲区，待
	缓冲区满了或者主动调用函数时才将缓冲区的数据写入文件，所以如果在将缓冲区的数据
	写入文件前程序运行结束，就会将缓冲区的数据丢失，导致数据未写入文件中，所以我们在程序终止前，
	要主动调用fclose()函数，关闭所有的打开文件，避免数据丢失
~memcpy/strcpy区别
~如何得知现在的标准头文件路径有哪些
~c语言输出二进制数

												  python
-----------------------------------------------------------------------------------------------------------------
~try-except的具体用法

                                                   算法
-----------------------------------------------------------------------------------------------------------------
~二分法排序，冒泡排序等排序算法	

											      数据库
-----------------------------------------------------------------------------------------------------------------
~mysql插入数据时，插入时间

~windows客户端如何连接虚拟机上的MySQL数据库

~先在终端下实现db
~在控制台下实现db
~C接口函数实现db
~区分db终端与控制台

~先在终端下实现mysql
~在控制台下实现mysql
~C接口函数实现mysql
~区分mysql终端与控制台

~先在终端下实现oracle
~在控制台下实现oracle
~C接口函数实现oracle
~区分oracle终端与控制台

~区分db/mysql/oracle

~数据库常规操作
1.链接数据库：注意有哪几种链接方式
2.断开链接
3.增加数据库
4.删除数据库
5.改数据库名称
6.查看数据库列表
7.建表
8.删表
9.更改表结构
10.显示表的列表
11.显示表结构
12.复制一个表结构并命名
13.增加数据
14.删除数据
15.更改数据
16.查询数据
17.如何编目数据库：理解节点的含义
18.如何备份数据库
	1）将表数据导出：导出全量表数据是配合（10）使用，注意剔除某个表怎么处理（配合grep的不包含用法-v）
	2）导出整个数据库包括表结构
19.如何恢复数据库
	1）根据导出的数据恢复
	2）根据数据库导出包恢复
	
	
~搞清楚客户端服务器、用户及数据库关系，服务端服务器、用户及数据库之间关系？

~搞清楚用户，实例，数据库之间关系？

~搞清楚服务与用户的关系？

~搞清楚命令是在什么服务器，什么用户下执行，执行结果是什么？

~数据库别名是什么时间产生的

~删除数据库编目时，是先删除节点编目还是先删除数据库编目

~数据库长连接/短连接

~mysql相关问题
	1）primary key用法
	2）zerofill用法
	3）主键与外键的使用，多表连接查询
	4）视图的概念，试图的作用
	5）视图和表的区别以及联系
	6）数据库查询结果集获取时如何更改结果集


												memcached
-----------------------------------------------------------------------------------------------------------------
	一）memcached的操作场景
		1.Linux终端
		2.C语句
	二）memcached操作
		1.如何布置分布式缓存环境
			1）下载memcached可执行文件，拷贝到bin目录下
			2）启动、停止memcached...（注意启动参数的使用）
			3）检测端口是否打开
		2.如何实现系统应用与缓存环境的关联
		3.操作命令

													GIT
-----------------------------------------------------------------------------------------------------------------
~什么是分支？
~如何查看git有哪些分支
~怎么创建多个分支，并实现分支的转换
~刚开始配置的用户名和邮箱是谁的？
~config的三个配置信息代表什么意思：系统，仓库，当前用户？
~如何查看本地仓库与远程仓库的区别？
~深入分析工作区域，暂存区域，本地仓库之间的区别?
~git push怎样设置秘钥才能不用每次输入远程仓库密码？
	1）修改./git/config 文件
	2）添加ssh公钥
~git clone时不用建立与github之间的交互吗
~分析新建一个本地仓库和克隆一个仓库的完整流程？
~当push时，远程仓库提示的用户名称怎么改变？
~如何实现vim与外部文件实现自由复制粘贴
ok~收尾git
ok	1）将项目建立在GITHUB中
	2）练习项目，顺便熟悉GIT使用
~git命令用法
    解决rebase in progress
	1）git branch savename
	2）git rebase --abort
	
~分支是什么，怎么处理分支

~理解git push的作用
~review后代码是自动和合并到远程仓库吗？
~深入理解合并操作？
~深入理解工作区 暂存区 本地仓库，分析里面包含的内容？
~深入理解add  commit操作？理解生成的HASH值？
~深入理解撤销操作？
~git rebase？
~理解git  github  gerrit之间的关系？ 
~在PS1中显示git分支名？
~分支是从哪里开分的？
~远程仓库也可以有很多分支吗？
~.gitignore的具体用法？
~如何合并分支？

~同步master分支至my_branch_name分支
~处理git问题集
~学习菜鸟教程中git教程
~整理git基础知识
 

