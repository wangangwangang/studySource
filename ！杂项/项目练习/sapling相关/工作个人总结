-----------------------------------------------------------
				重点关注流程
-----------------------------------------------------------
·mbuf:dp收包									  						
·mbuf->skb:
·ct:dp建流
·skb->packet:
·dp解包:(以日志中出现的字段为目标分析)		   
·出日志、文件
·发报文工具

·公共字段已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·tcp/udp日志字段
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·会话层日志
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·tls已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·http已有字段追踪分析	
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·DNS已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·ftp已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·telnet已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·pop3已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·smtp已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·imap已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·smb已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容
·mysql已有字段追踪分析
		·每个字段对应日志字段表的内容
		·对应的数据在代码中如何提取
		·每个字段在报文中对应的内容


·测试环境获取授权码：
http://192.168.216.188:8098/authorization/#/home
admin  Admin.123




·perf 性能分析工具
  序号	  命令		                      作用
	1	annotate		解析perf record生成的perf.data文件，显示被注释的代码。
	2	archive			根据数据文件记录的build-id，将所有被采样到的elf文件打包。利用此压缩包，可以再任何机器上分析数据文件中记录的采样数据。
	3	bench			perf中内置的benchmark，目前包括两套针对调度器和内存管理子系统的benchmark。
	4	buildid-cache	管理perf的buildid缓存，每个elf文件都有一个独一无二的buildid。buildid被perf用来关联性能数据与elf文件。
	5	buildid-list	列出数据文件中记录的所有buildid。
	6	diff			对比两个数据文件的差异。能够给出每个符号（函数）在热点分析上的具体差异。
	7	evlist			列出数据文件perf.data中所有性能事件。
	8	inject			该工具读取perf record工具记录的事件流，并将其定向到标准输出。在被分析代码中的任何一点，都可以向事件流中注入其它事件。
	9	kmem			针对内核内存（slab）子系统进行追踪测量的工具
	10	kvm				用来追踪测试运行在KVM虚拟机上的Guest OS。
	11	list			列出当前系统支持的所有性能事件。包括硬件性能事件、软件性能事件以及检查点。
	12	lock			分析内核中的锁信息，包括锁的争用情况，等待延迟等。
	13	mem				内存存取情况
	14	record			收集采样信息，并将其记录在数据文件中。随后可通过其它工具对数据文件进行分析。
	15	report			读取perf record创建的数据文件，并给出热点分析结果。
	16	sched			针对调度器子系统的分析工具。
	17	script			执行perl或python写的功能扩展脚本、生成脚本框架、读取数据文件中的数据信息等。
	18	stat			执行某个命令，收集特定进程的性能概况，包括CPI、Cache丢失率等。
	19	test			perf对当前软硬件平台进行健全性测试，可用此工具测试当前的软硬件平台是否能支持perf的所有功能。
	20	timechart		针对测试期间系统行为进行可视化的工具
	21	top				类似于linux的top命令，对系统性能进行实时分析。
	22	trace			关于syscall的工具。
	23	probe			用于定义动态检查点。    

·tcpreplay -i ens33 -l 200 <*.pcap>
	·-i			指定输出接口
	·-l			指定循环发送次数

·tcprewrite --enet-vlan=add --enet-vlan-tag=100 --enet-vlan-cfi=1 --enet-vlan-pri=4 --infile=re_mysql_login_v4_227.pcap --outfile=new.pcap
	·更改报文vlan头部信息

·查看debug信息
	·vtysh -> enable
	·debug tfs config
	·show  log debug 
	·clear log debug

·处理报文重发时不产生csv问题
	vtysh -> en -> clear ip connection all

·设置网卡混杂：ifconfig ens34 promisc

·scp audit root@192.168.223.192:/mnt/tfs_config

·rz <filename>		发送文件至本地

·lsmod | grep igb_uio

·tcpreplay -i ens34  111.pcap			//发包命令

·	/mnt/workspace/TFS_D1.0/bin/obj-dpdk# ./vtysh
	show statistics interface								//检查是否收报
  


·新环境编译运行步骤
	·先 make >>/dev/null -j 20
	·确定只有管理接口active
	·打包： 
		·src目录下: sh make_tfs_package.sh 
		·将压缩文件移到指定目录解压:tar -zxf  *.gz
		·进入解压目录: sh install_dplane_dpdk.sh
		·进入解压目录：./bin/dplane
	·运行

~新机配网
	网口 sw3 29 
	192.168.202.74
	255.255.255.0
	192.168.202.1
	114.114.114.114
	8.8.8.8

	网口 sw4 29
	192.168.212.74
	255.255.255.0
	192.168.212.1
	114.114.114.114
	8.8.8.8

~无线网
	wifi sapling-2.4
	sapling@123

	wifi sapling-5
	sapling@123

~安博通服务器地址
	https://192.168.216.87
	admin/admin@2019

~数据中心
	https://192.168.210.122/login.html  
	admin/admin.123

~科莱服务器地址
	https://192.168.223.6
	csadmin/!CSRAS23

~代码权限
	svn://192.168.0.254/saplingos/branches/NGFW_D5.4_TSA_BASIC
	svn://192.168.0.254/saplingos/branches/NTA/NPV_R2.1_HBBANK
	svn://192.168.0.254/saplingos/branches/NTA/NPV_R2.1
	svn://192.168.0.254/saplingos/branches/NTA/NPV_SDK2
	svn://192.168.0.254/saplingos/branches/TFS_D1.0/
	svn://192.168.0.254/da/branches/TFS_Trunk
	svn://192.168.0.254/da/branches/TFS_R1.0
	svn://192.168.0.254/da/branches/TFS_Probe1.0

~svn用法
	svn checkout --username zhangsan --password 123456 <URL>
	svn up --username zhangsan --password 123456 <URL>
	svn status   | svn stat | grep "^[^\?]"  | svnwhat
	svn commit -m "desc"
	svn ci src/dplane/tfs/tfs_dev.c -m "desc"   提交指定文件

~samba实现linux系统的文件共享
	1.apt-cache search samba
	2.apt-get install samba
	3.cd /etc/samba/ && vim smb.conf
		[workspace]
		browseable = yes
		path = /mnt/workspace
		public = yes
		valid users = root
		write list = root
		writable = yes
		available = yes
	4.smbpasswd -a  root
	5.reboot
	6.systemctl restart smbd.service

~服务器
	·编译服务器		192.168.205.250		admin/admin 
	·连接管理平台	100.100.0.254		root/sapling.123
	·个人ip申请范围（192.168.222.190-194	192.168.223.190-194）
	·个人虚拟机
		·tfs	192.168.223.190		root/sapling         
	
~编译步骤
	·依赖安装
		apt-get install flex bison libnuma-dev libncurses5 linux-source-5.4.0 libelf-dev libpcap-dev
	·安装内核工具bpf
		cd /usr/src/ && tar jxvf linux-source-5.4.0.tar.bz2 && cd /usr/src/linux-source-5.4.0/tools/lib/bpf
		make install_lib
		make install_headers
	·src目录 make     (注意dpdk编译时不支持-j) 
	
~运行环境设置
	·设置运行库
		·export LD_LIBRARY_PATH=/root/TFS_D1.0/lib/prebuild-dpdk:/usr/local/lib64/
	·设置tipc
		·modprobe tipc
	·设置大页内存
		·cat /proc/meminfo
		·/mnt/workspace/TFS_D1.0/src/script/setting_hugepage.sh
	·检查有没有dplane_crash的线程
		·ps -au | grep "dplane"
		·gdb -p 跟上dplane_crash进程号，方便定位错位
	·将管理接口名{例："ens33"}写入到/mnt/skip_dpdk_if文件中跳过初始化，否则只能从串口访问）
	·查看进程下文件描述符
		·列表：ls /proc/390933/fd
		·个数：ls /proc/390933/fd -l | wc -l

~运行：
	·  cd /mnt/workspace/TFS_D1.0/bin/obj-dpdk
	·  ./dplane --single-file-segments
	
~上库前格式转换
	·astyle --style=linux --indent=force-tab --suffix=none --pad-oper --pad-header --unpad-paren -w
	
~sourceinsight4.0
	·破解办法：https://blog.csdn.net/s2603898260/article/details/105943152
	·更改文件编码格式
		·全选文件复制
		·file->open as encoding->utf-8
		·粘贴保存
		
~编程规范
	·变量定义与使用需要空一行
	·if等关键字后有空格
	·if等关键字左花括号紧跟其后，函数花括号换行
	·函数参数中间有空格
	
~错误信息打印
	printf_console()打印到终端和串口
	ipc_set_emsg()将错误信息发给前端
	
~vpn链接
	地址：1.202.165.166   端口：1194
	账号：zhouhao         密码：666666
	

	地址：sapling.oicp.io 端口：1194
	账号：liyonghui       密码：admin@123


~配网段网关地址
	/etc/netplane/00-installer-config.yaml
	netplan apply
	
~查网关信息
	route -n

~ip addr ：查看本地IP地址的
	·注意：linux下支持设备设置多个ip
	·ip -6 addr del/add fe80::250:56ff:feb8:f15c/64  dev ens33
	·ip    addr del/add 192.168.223.194/24           dev ens33
	
~netplan: 更改ip 网关 dns等配置    </etc/netplan/filename>
	·netplan set network.ethernets.ens33.addresses=192.168.223.193/24 && netplan apply
	

~ssh通过ipv6远程管理服务器：ssh -6 fe80::250:56ff:feb8:f15a%ens33

~bug单格式
【问题现象】
http://192.168.0.254:8080/browse/TFSV1-304
链路虚链路不可以重名
【问题原因】
未作重名校验
【解决方法】
增加重名校验逻辑
【单元测试】
王昂环境验证ok
【影响分支】
TFS_D1.0
【影响模块】
接口链路
【修改涉及模块】
接口链路
【举一反三】
无
【测试建议】
1、更新版本，测试链路/虚链路新增/修改，观察重名时的现象
【代码评审人】
袁升
【SVN Revision】
Committed revision 135474.